[cfg_proto]
cfg_proto = proto/global.proto
cfg_proto_chunk = proto/global_chunk.proto

[exp]
cmd =
run_nn_script = run_nn
out_folder = exp/all_no_BG
seed = 2234
use_cuda = True
multi_gpu = False
save_gpumem = False
n_epochs_tr = 24
use_articulatory_feats = True
articulatory_feat_dim = 51
skip_training = True
pred_folder = pred_BG_only
is_universal = True

[dataset1]
data_name = UPM_tr
fea = fea_name=mfcc
	fea_lst=/home/paul/upm_exp/baseline_mfcc/data/train_no_BG/feats.scp
	fea_opts=apply-cmvn --utt2spk=ark:/home/paul/upm_exp/baseline_mfcc/data/train_no_BG/utt2spk  ark:/home/paul/gp_feats/mfcc/cmvn_train_no_BG.ark ark:- ark:- | add-deltas --delta-order=2 ark:- ark:- |
	cw_left=0
	cw_right=0

lab = lab_name=lab_mono
	lab_folder=/home/paul/upm_exp/baseline_mfcc/tri3_ali_train_no_BG
	lab_opts=ali-to-phones --per-frame=true
	lab_count_file=none
	lab_data_folder=/home/paul/upm_exp/baseline_mfcc/data/train_no_BG/
	lab_graph=/home/paul/upm_exp/baseline_mfcc/tri3/graph
n_chunks = 90

[dataset2]
data_name = UPM_val
fea = fea_name=mfcc
	fea_lst=/home/paul/upm_exp/BG_only/data/val/feats.scp
	fea_opts=apply-cmvn --utt2spk=ark:/home/paul/upm_exp/BG_only/data/val/utt2spk  ark:/home/paul/gp_feats/mfcc/cmvn_val.ark ark:- ark:- | add-deltas --delta-order=2 ark:- ark:- |
	cw_left=0
	cw_right=0

lab = lab_name=lab_mono
	lab_folder=/home/paul/upm_exp/BG_only/tri3_ali_val
	lab_opts=ali-to-phones --per-frame=true
	lab_count_file=none
	lab_data_folder=/home/paul/upm_exp/BG_only/data/val/
	lab_graph=/home/paul/upm_exp/BG_only/tri3/graph
n_chunks = 20

[dataset3]
data_name = UPM_test
fea = fea_name=mfcc
	fea_lst=/home/paul/upm_exp/BG_only/data/test/feats.scp
	fea_opts=apply-cmvn --utt2spk=ark:/home/paul/upm_exp/BG_only/data/test/utt2spk  ark:/home/paul/gp_feats/mfcc/cmvn_test.ark ark:- ark:- | add-deltas --delta-order=2 ark:- ark:- |
	cw_left=0
	cw_right=0

lab = lab_name=lab_mono
	lab_folder=/home/paul/upm_exp/BG_only/tri3_ali_test
	lab_opts=ali-to-phones --per-frame=true
	lab_count_file=none
	lab_data_folder=/home/paul/upm_exp/BG_only/data/test/
	lab_graph=/home/paul/upm_exp/BG_only/tri3/graph
n_chunks = 20

[data_use]
train_with = UPM_tr
valid_with = UPM_val
forward_with = UPM_test

[batches]
batch_size_train = 8
max_seq_length_train = 1000
increase_seq_length_train = True
start_seq_len_train = 100
multply_factor_seq_len_train = 2
batch_size_valid = 8
max_seq_length_valid = 1000

[architecture1]
arch_name = RNN_layers
arch_proto = proto/RNN.proto
arch_library = neural_networks
arch_class = RNN
arch_pretrain_file = none
arch_freeze = False
arch_seq_model = True
rnn_lay = 550,550,550,550
rnn_drop = 0.2,0.2,0.2,0.2
rnn_use_laynorm_inp = False
rnn_use_batchnorm_inp = False
rnn_use_laynorm = False,False,False,False
rnn_use_batchnorm = True,True,True,True
rnn_bidir = True
rnn_act = relu,relu,relu,relu
rnn_orthinit = True
arch_lr = 0.00032
arch_halving_factor = 0.5
arch_improvement_threshold = 0.001
arch_opt = rmsprop
opt_momentum = 0.0
opt_alpha = 0.95
opt_eps = 1e-8
opt_centered = False
opt_weight_decay = 0.0

[architecture2]
arch_name = MLP_layers
arch_proto = proto/MLP.proto
arch_library = neural_networks
arch_class = MLP
arch_pretrain_file = none
arch_freeze = False
arch_seq_model = False
dnn_lay = 51
dnn_drop = 0.0
dnn_use_laynorm_inp = False
dnn_use_batchnorm_inp = False
dnn_use_batchnorm = False
dnn_use_laynorm = False
dnn_act = sigmoid
arch_lr = 0.00032
arch_halving_factor = 0.5
arch_improvement_threshold = 0.001
arch_opt = rmsprop
opt_momentum = 0.0
opt_alpha = 0.95
opt_eps = 1e-8
opt_centered = False
opt_weight_decay = 0.0


[model]
model_proto = proto/model.proto
model = out_dnn1=compute(RNN_layers,mfcc)
	out_dnn2=compute(MLP_layers,out_dnn1)
	loss_final=cost_ce(out_dnn2,lab_mono)
	err_final=cost_err(out_dnn2,lab_mono)
	pred_out=pred_from_att(out_dnn2,lab_mono)

[forward]
forward_out = pred_out
normalize_posteriors = False
normalize_with_counts_from = lab_mono
save_out_file = False
require_decoding = True

[decoding]
decoding_script_folder = kaldi_decoding_scripts/
decoding_script = decode_dnn.sh
decoding_proto = proto/decoding.proto
min_active = 200
max_active = 7000
max_mem = 50000000
beam = 13.0
latbeam = 8.0
acwt = 0.2
max_arcs = -1
skip_scoring = false
scoring_script = local/score.sh
scoring_opts = "--min-lmwt 1 --max-lmwt 10"
norm_vars = False
